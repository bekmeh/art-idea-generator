{"version":3,"sources":["components/ChosenWord.js","components/ChosenWords.js","components/RemoveWordArea.js","components/Tooltip.js","components/ChangeNumWordsButton.js","components/ChooseRandomWordsButton.js","components/IdeaWord.js","components/Category.js","data/wordsData.js","App.js","reportWebVitals.js","index.js"],"names":["ChosenWord","this","props","word","index","draggableId","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","id","className","draggingOver","isDragging","Component","ChosenWords","selectedWords","droppableId","direction","droppableProps","length","style","width","height","xmlns","d","stroke","fill","strokeLinecap","strokeLinejoin","y2","x2","y1","x1","fillOpacity","transform","map","selectedWord","placeholder","RemoveWordArea","viewBox","strokeWidth","Tooltip","show","timeout","setTimeout","setState","active","delay","hide","clearInterval","state","onMouseEnter","onMouseLeave","children","content","ChangeNumWordsButton","diff","label","onClick","changeNumWords","ChooseRandomWordsButton","numWords","IdeaWord","selected","Category","handleArrowClick","isOpen","prevProps","collapse","expand","words","some","includes","category","arrow","arias-hidden","data-reactid","points","hasWords","onClickWord","wordsData","App","totalNumWords","Object","keys","forEach","newNumWords","getRandomWord","categories","randomCategory","Math","floor","random","chooseRandomWords","chosenWords","randomWord","push","clearWords","collapseCategories","categoriesCollapsed","expandCategories","categoriesExpanded","newSelectedWords","filter","Array","from","onDragStart","onDragEnd","result","destination","source","splice","droppablId","fillRule","clipRule","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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AAO,qBAGjBC,EAAWR,EAAMC,MAAK,SAAAvE,GAAI,OAAI,EAAKD,MAAMgB,cAAcyD,SAASxE,MAEtE,OACE,sBAAKU,UAAU,+BAAf,UACE,sBAAKA,UAAS,yGAAoGoE,EAAW,gCAAkC,IAA/J,UACE,oBAAIpE,UAAU,oGAAd,SACI+D,IAEJ,qBAAK/D,UAAU,4GACVgD,QAAS5D,KAAKmE,iBADnB,SAEIS,OAGJ5E,KAAKoD,MAAMgB,OACP,qBAAKxD,UAAU,sFAAf,SAEI4D,EAAMnC,KAAI,SAACnC,GACT,OAAO,cAAC,EAAD,CAA+BA,KAAMA,EAAM0D,QAAS,EAAK3D,MAAMgF,YAAahB,SAAU,EAAKhE,MAAMgB,cAAcyD,SAASxE,IAAxH,eAAuBA,SAIpC,Y,GA7DSa,aCHVmE,EAAY,CACvB,MAAS,CACP,UACA,OACA,QACA,QACA,UACA,YACA,SACA,SACA,MACA,SACA,UACA,SACA,iBACA,oBAEF,QAAW,CACT,YACA,QACA,YACA,OACA,OACA,YACA,QACA,WACA,OACA,QACA,OACA,QACA,OACA,OACA,WACA,MACA,SACA,QACA,MACA,QACA,UACA,QACA,SAEF,OAAU,CACR,QACA,QACA,YACA,MACA,SAEF,eAAgB,CACd,UACA,OACA,OACA,SACA,WACA,cACA,QACA,OACA,WAEF,MAAS,CACP,SACA,YACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,QACA,OACA,SACA,QACA,cACA,SACA,WACA,YACA,WAEF,IAAO,CACL,MACA,UACA,QACA,iBACA,OACA,MACA,OACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,WAEF,iBAAkB,CAChB,aACA,SACA,QACA,cACA,sBACA,OACA,WACA,MACA,eACA,YACA,aACA,YACA,WAEF,QAAW,CACT,QACA,QACA,UACA,UACA,SACA,SACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,OACA,YACA,MACA,QAEF,WAAc,CACZ,UACA,OACA,cACA,QACA,iBACA,aACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,OACA,YACA,SACA,SACA,OACA,QACA,QAEF,MAAS,CACP,WACA,UACA,UACA,YACA,UACA,WACA,UACA,cACA,UACA,UACA,UACA,UACA,UACA,WCNWC,G,wDAxJb,WAAYlF,GAAQ,IAAD,8BACjB,cAAMA,IAIR4D,eAAiB,SAACH,GAChB,IAAI0B,EAAgB,EAGpB,GAFAC,OAAOC,KAAKJ,GAAWK,SAAQ,SAAAZ,GAAQ,OAAIS,GAAgCF,EAAUP,GAAUtD,YAElE,IAAxB,EAAK+B,MAAMW,UAAkBL,EAAO,GACjC,EAAKN,MAAMW,WAAaqB,GAAiB1B,EAAO,GACxB,KAAxB,EAAKN,MAAMW,UAAmBL,EAAO,GAF7C,CAMA,IAAM8B,EAAc,EAAKpC,MAAMW,SAAWL,EAC1C,EAAKX,SAAS,CAAEgB,SAAUyB,MAhBT,EAmBnBC,cAAgB,WACd,IAAMC,EAAaL,OAAOC,KAAKJ,GACzBS,EAAiBT,EAAUQ,EAAWE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWrE,UAClF,OAAOsE,EAAeC,KAAKC,MAAMD,KAAKE,SAAWH,EAAetE,UAtB/C,EAyBnB0E,kBAAoB,WAGlB,IAFA,IAAIC,EAAc,GAEXA,EAAY3E,OAAS,EAAK+B,MAAMW,UAAU,CAC/C,IAAMkC,EAAa,EAAKR,gBACnBO,EAAYtB,SAASuB,IACxBD,EAAYE,KAAKD,GAIrB,EAAKlD,SAAS,CAAE9B,cAAe+E,KAnCd,EAsCnBG,WAAa,WACX,EAAKpD,SAAS,CAAE9B,cAAe,MAvCd,EA0CnBmF,mBAAqB,WACnB,EAAKrD,SAAS,CAAEsD,qBAAqB,IAAQ,WAAQ,EAAKtD,SAAS,CAAEsD,qBAAqB,QA3CzE,EA8CnBC,iBAAmB,WACjB,EAAKvD,SAAS,CAAEwD,oBAAoB,IAAQ,WAAQ,EAAKxD,SAAS,CAAEwD,oBAAoB,QA/CvE,EAkDnBtB,YAAc,SAAC/E,GACb,GAAI,EAAKkD,MAAMnC,cAAcyD,SAASxE,GAAO,CAE3C,IAAMsG,EAAmB,EAAKpD,MAAMnC,cAAcwF,QAAO,SAACnE,GAAD,OAAkBA,IAAiBpC,KAC5F,EAAK6C,SAAS,CAAE9B,cAAeuF,QAC1B,CAEL,IAAIA,EAAmBE,MAAMC,KAAK,EAAKvD,MAAMnC,eAC7CuF,EAAiBN,KAAKhG,GACtB,EAAK6C,SAAS,CAAE9B,cAAeuF,MA3DhB,EA+DnBI,YAAc,WACZ,EAAK7D,SAAS,CAAEjC,YAAY,KAhEX,EAmEnB+F,UAAY,SAACC,GACX,IAAQC,EAAqCD,EAArCC,YAAaC,EAAwBF,EAAxBE,OAAQ5G,EAAgB0G,EAAhB1G,YAE7B,GAAK2G,EAAL,CAIA,GAAgC,gBAA5BA,EAAY7F,YAA+B,CAE7C,IAAMsF,EAAmBE,MAAMC,KAAK,EAAKvD,MAAMnC,eAG/C,OAFAuF,EAAiBS,OAAOD,EAAO7G,MAAO,QACtC,EAAK4C,SAAS,CAAE9B,cAAeuF,EAAkB1F,YAAY,IAI/D,GAAIiG,EAAYG,aAAeF,EAAOE,YAAcH,EAAY5G,QAAU6G,EAAO7G,MAAjF,CAMA,IAAMqG,EAAmBE,MAAMC,KAAK,EAAKvD,MAAMnC,eAE/CuF,EAAiBS,OAAOD,EAAO7G,MAAO,GAEtCqG,EAAiBS,OAAOF,EAAY5G,MAAO,EAAGC,GAE9C,EAAK2C,SAAS,CAAE9B,cAAeuF,EAAkB1F,YAAY,SAV3D,EAAKiC,SAAS,CAAEjC,YAAY,MAlF9B,EAAKsC,MAAQ,CAAEnC,cAAe,GAAIH,YAAY,EAAOiD,SAAU,EAAGsC,qBAAqB,EAAOE,oBAAoB,GAFjG,E,0CAiGnB,WAAU,IAAD,OACP,OACE,sBAAK3F,UAAU,MAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,oBAAIA,UAAU,sCAAd,kCAEF,yBAASA,UAAU,0BAAnB,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,eAAC,IAAD,CAAiBgG,YAAa5G,KAAK4G,YAAaC,UAAW7G,KAAK6G,UAAhE,UACE,cAAC,EAAD,CAAa5F,cAAejB,KAAKoD,MAAMnC,gBACvC,cAAC,EAAD,CAAgBH,WAAYd,KAAKoD,MAAMtC,gBAEzC,sBAAKF,UAAU,mEAAf,UACE,qBAAKA,UAAU,QAEf,8BACE,sBAAKA,UAAU,uCAAf,UACE,cAAC,EAAD,CAAsB8C,MAAO,EAAGG,eAAgB7D,KAAK6D,iBACrD,cAAC,EAAD,CAAyBE,SAAU/D,KAAKoD,MAAMW,SAAUH,QAAS5D,KAAK+F,oBACtE,cAAC,EAAD,CAAsBrC,KAAM,EAAGG,eAAgB7D,KAAK6D,sBAGxD,8BACE,cAAC,EAAD,CAAS1C,UAAU,QAAQqC,QAAQ,gJAAnC,SACE,qBAAK/B,MAAM,6BAA6Bb,UAAU,iBAAiB6B,QAAQ,YAAYb,KAAK,qBAA5F,SACE,sBAAMuF,SAAS,UAAUzF,EAAE,yLAAyL0F,SAAS,qBAKrO,qBAAKxG,UAAU,+CAA+CgD,QAAS5D,KAAKmG,WAA5E,SACE,wBAAQvF,UAAU,iCAAlB,iCAGJ,sBAAKA,UAAU,0CAAf,UACE,wBAAQA,UAAU,sCAAsCgD,QAAS5D,KAAKoG,mBAAtE,0BACA,wBAAQxF,UAAU,sCAAsCgD,QAAS5D,KAAKsG,iBAAtE,2BAEF,qBAAK1F,UAAU,2EAAf,SAEIyE,OAAOC,KAAKJ,GAAW7C,KAAI,SAACsC,GAC1B,OAAO,cAAC,EAAD,CAAuCA,SAAUA,EAAUH,MAAOU,EAAUP,GAClEM,YAAa,EAAKA,YAAahE,cAAe,EAAKmC,MAAMnC,cACzDqD,SAAU,EAAKlB,MAAMiD,oBAAqB9B,OAAQ,EAAKnB,MAAMmD,oBAFvE,mBAA2B5B,qB,GA7IlC5D,cCCHsG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.56c896e5.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nclass ChosenWord extends Component {\n\n  render() {\n    const { word, index } = this.props;\n\n    return (\n      <Draggable draggableId={word} index={index}>\n        {(provided, snapshot) => (\n          <div {...provided.draggableProps}\n               {...provided.dragHandleProps}\n               ref={provided.innerRef}\n          >\n            <span id={word}\n                  className={`inline-block\n                              cursor-move\n                              select-none\n                              py-1 px-2 mx-2 rounded\n                              text-2xl font-medium tracking-widest transition-none\n                              ${ snapshot.draggingOver === 'delete-area'\n                                ? 'bg-red-300 text-red-800'\n                                : snapshot.isDragging\n                                  ? 'bg-indigo-300 text-indigo-800'\n                                  : 'bg-indigo-50 text-indigo-500' }`}>\n              { word }\n            </span>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport default ChosenWord;\n","import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport ChosenWord from './ChosenWord';\n\nclass ChosenWords extends Component {\n  \n  render() {\n    const { selectedWords } = this.props;\n\n    return (\n      <Droppable droppableId=\"chosen-words-droppable\" direction=\"horizontal\">\n        { (provided) => (\n          <div ref={provided.innerRef}\n              {...provided.droppableProps}\n              className=\"flex flex-auto flex-row justify-center sm:text-3xl text-2xl font-medium text-center title-font text-gray-900 mb-4 h-10\"\n          >\n            {\n              selectedWords.length === 0\n                ? <div>\n                    <p className=\"text-base title-font leading-relaxed text-gray-400 pt-4\">Please choose some words</p>\n                    <svg className=\"absolute left-1/2 bottom-1/2 m-3\" style={{\"zIndex\": -1}} width=\"108.99999999999999\" height=\"213.99999999999997\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <g>\n                        <path d=\"m370.5,139.5c0,1 1.7695,0.39099 4,4c1.66251,2.68999 2.33197,6.22935 4,10c1.45865,3.29733 2.41479,7.90759 4,16c1.35928,6.93919 0.92987,14.00908 2,22c0.93857,7.0085 1,15 1,23c0,9 0.48434,17.06711 -1,26c-1.51126,9.09483 -3.36584,18.89746 -6,29c-2.32614,8.92126 -5.28473,20.92484 -7,28c-1.20139,4.95547 -2.54861,10.76993 -4,15c-1.65482,4.82303 -1.84723,8.04132 -3,12c-0.88412,3.03616 -2,5 -3,6l0,0l0,1l0,0\" id=\"svg_12\" stroke=\"rgb(156, 163, 175)\" fill=\"none\"/>\n                        <line strokeLinecap=\"undefined\" strokeLinejoin=\"undefined\" id=\"svg_17\" y2=\"331.5\" x2=\"360.5\" y1=\"312.5\" x1=\"355.5\" stroke=\"rgb(156, 163, 175)\" fill=\"none\"/>\n                        <path stroke=\"rgb(156, 163, 175)\" d=\"m35.2777,73.59052c0,0 0.65217,-0.11527 1.92764,0c2.62943,0.23763 4.49782,0.9434 6.42546,1.8868c1.92764,0.9434 3.99128,1.75195 5.78291,2.8302c1.40547,0.84585 3.34874,2.22365 5.14036,3.3019c3.51367,2.11462 5.47403,4.03689 7.068,5.66039c1.68019,1.71132 2.57018,3.3019 3.85527,4.71699c1.28509,1.4151 2.00209,2.34144 2.57018,3.77359c0.74071,1.86731 1.38817,3.28457 1.92764,5.18869c0.79588,2.80912 0.64255,4.24529 0.64255,6.13209c0,1.8868 0,3.3019 0,5.66039c0,1.8868 -1.00848,3.83633 -1.92764,5.66039c-0.99697,1.97847 -2.69489,3.72103 -4.49782,6.13209c-1.38278,1.8492 -2.5961,3.60724 -4.49782,5.18869c-1.53322,1.275 -3.21273,2.3585 -4.49782,3.3019c-1.28509,0.9434 -2.47555,1.96845 -3.21273,2.3585c-1.16557,0.61672 -2.57018,1.4151 -3.21273,1.8868c-0.64255,0.4717 -1.57989,0.32709 -1.92764,0.9434c-0.24589,0.43579 0,0.4717 -0.64255,0.4717l0,0l0,0\" id=\"svg_23\" fillOpacity=\"0\" fill=\"none\"/>\n                        <line transform=\"rotate(-30.0686 47.7997 133.084)\" stroke=\"rgb(156, 163, 175)\" strokeLinecap=\"undefined\" strokeLinejoin=\"undefined\" id=\"svg_24\" y2=\"137.22358\" x2=\"43.77022\" y1=\"128.94355\" x1=\"51.82925\" fillOpacity=\"0\" fill=\"none\"/>\n                        <line transform=\"rotate(26.4459 52.6481 139.129)\" stroke=\"rgb(156, 163, 175)\" strokeLinecap=\"undefined\" strokeLinejoin=\"undefined\" id=\"svg_25\" y2=\"141.80646\" x2=\"46.5129\" y1=\"136.45245\" x1=\"58.78332\" fillOpacity=\"0\" fill=\"none\"/>\n                      </g>\n                    </svg>\n                  </div>\n              : null\n          }\n          {\n            selectedWords.map((selectedWord, index) => {\n              return <ChosenWord key={`chosen=${selectedWord}`} index={index} word={selectedWord}/>\n            })\n          }\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  )}\n}\n\nexport default ChosenWords;\n","import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nclass RemoveWordArea extends Component {\n  \n  render() {\n    return (\n      <Droppable droppableId=\"delete-area\" direction=\"horizontal\">\n        { (provided) => (\n          <div ref={provided.innerRef}\n               {...provided.droppableProps}\n               className={`flex flex-row justify-center rounded-full mx-auto h-10 w-10 text-gray-400`}\n          >\n            <p className=\"text-base leading-relaxed\">\n              { this.props.isDragging\n                ? <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mt-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                  </svg> \n                : null \n              }\n            </p>\n          </div>\n        )}\n      </Droppable>\n    )\n  }\n}\n\nexport default RemoveWordArea;\n","import React, { Component } from 'react';\n\nclass Tooltip extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { active: false, timeout: 0 };\n  }\n\n  show = () => {\n    const timeout = setTimeout(() => {\n      this.setState({ active: true });\n    }, this.props.delay || 400);\n\n    this.setState({ timeout: timeout});\n  }\n\n  hide = () => {\n    clearInterval(this.state.timeout);\n    this.setState({ active: false });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"flex pt-12 align-middle text-center\"\n        onMouseEnter={this.show}\n        onMouseLeave={this.hide}\n      >\n        {this.props.children}\n        \n        {this.state.active && (\n          <div className={`absolute rounded-md left-1/2 p-1 m-3 w-64 bg-indigo-200 zIndex-10 top-1/2 left-7 transform -translate-y-1/2\n              ${this.props.direction === \"top\" ? \"top-10\" : \n                this.props.direction === \"bottom\" ? \"bottom-10\" :\n                this.props.direction === \"left\" ? \"top-1/2 right-10\" :\n                this.props.direction === \"right\" ? \"ml-5 top-1/2 left-10\" : \"\" }}`}>\n            {this.props.content}\n          </div>\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default Tooltip;\n","\nimport React, { Component } from 'react';\n\nclass ChangeNumWordsButton extends Component {\n\n  render() {\n    const { diff } = this.props;\n\n    var label = \"\";\n\n    if (diff === 1) {\n      label = \"+\";\n    } else if (diff === -1) {\n      label = \"-\";\n    }\n\n    return (\n      <button className=\"flex mx-auto mt-10 mr-2\n                     text-indigo-800 bg-indigo-200\n                     border-0 py-2 px-4\n                     focus:outline-none hover:bg-indigo-400\n                     rounded text-s\n                     inline-flex items-center justify-center\" onClick={() => this.props.changeNumWords(diff)}>\n         { label }\n      </button>\n    );\n  }\n}\n\nexport default ChangeNumWordsButton;\n","\nimport React, { Component } from 'react';\n\nclass ChooseRandomWordsButton extends Component {\n\n  render() {\n    const { numWords } = this.props;\n\n    return (\n      <button className=\"flex mx-auto mt-10 mr-2\n                         text-white bg-indigo-500\n                         border-0 py-2 px-8\n                         focus:outline-none hover:bg-indigo-600\n                         rounded text-m\n                         inline-flex items-center justify-center\" onClick={this.props.onClick}>\n        Choose { numWords } random word{ numWords > 1 ? \"s\" : \"\" }\n      </button>\n    );\n  }\n}\n\nexport default ChooseRandomWordsButton;\n","import React, { Component } from 'react';\n\nclass IdeaWord extends Component {\n\n  render() {\n    const { word, selected } = this.props;\n\n    return (\n      <span className={`inline-block\n                        py-1 px-2 m-1 rounded\n                        cursor-pointer\n                        select-none\n                        text-m font-medium tracking-widest\n                        ${selected\n                          ? \"bg-indigo-200 text-indigo-800 hover:bg-indigo-300 hover:black\"\n                          : \"bg-indigo-50 text-indigo-500 hover:bg-indigo-200 hover:text-indigo-800\"}`}\n              onClick={() => this.props.onClick(word)}>\n        { word }\n      </span> \n    );\n  }\n}\n\nexport default IdeaWord;\n","import React, { Component } from 'react';\nimport IdeaWord from './IdeaWord';\n\nclass Category extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: true };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.collapse === false && this.props.collapse === true) {\n      this.setState({ isOpen: false });\n    }\n\n    if (prevProps.expand === false && this.props.expand === true) {\n      this.setState({ isOpen: true });\n    }\n\n    if (prevProps.selectedWords !== this.props.selectedWords) {\n      if (this.props.words.some(word => this.props.selectedWords.includes(word))) {\n        this.setState({ isOpen: true });\n      }\n    }\n  }\n\n  handleArrowClick = () => {\n    const isOpen = this.state.isOpen;\n    this.setState({ isOpen: !isOpen });\n  }\n  \n  render() {\n    const { category, words } = this.props;\n    const arrow = this.state.isOpen \n      ? (<svg arias-hidden=\"true\" data-reactid=\"281\" fill=\"none\" height=\"24\" stroke=\"rgb(79, 70, 229)\" strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n         <polyline points=\"18 15 12 9 6 15\"></polyline>\n        </svg>)\n      : (<svg arias-hidden=\"true\" data-reactid=\"266\" fill=\"none\" height=\"24\" stroke=\"rgb(79, 70, 229)\" strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <polyline points=\"6 9 12 15 18 9\"></polyline>\n        </svg>);\n\n    const hasWords = words.some(word => this.props.selectedWords.includes(word));\n\n    return (\n      <div className=\"p-2 lg:w-1/4 sm:w-1/2 w-full\">\n        <div className={`border border-indigo-50 rounded-xl p-2 mb-2 flex flex-auto flex-row justify-between rounded-md ${hasWords ? \"bg-indigo-50 text-indigo-600 \" : \"\"}`}>\n          <h2 className=\"font-medium title-font select-none tracking-widest m-2 text-sm text-center sm:text-left uppercase\">\n            { category }\n          </h2>\n          <div className=\"rounded-full w-7 h-7 m-2 my-auto float-right flex items-center justify-center bg-indigo-50 cursor-pointer\"\n               onClick={this.handleArrowClick}>\n            { arrow }\n          </div>\n        </div>\n        { this.state.isOpen\n            ? <div className=\"flex flex-auto flex-wrap sm:items-start sm:text-left text-center items-center -mb-1\">\n                {\n                  words.map((word) => {\n                    return <IdeaWord key={`word-${word}`} word={word} onClick={this.props.onClickWord} selected={this.props.selectedWords.includes(word)}/>\n                  })\n                }\n              </div>\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default Category;\n","export const wordsData = {\n  \"space\": [\n    \"jupiter\",\n    \"moon\",\n    \"space\",\n    \"comet\",\n    \"meteors\",\n    \"supernova\",\n    \"galaxy\",\n    \"planet\",\n    \"sun\",\n    \"saturn\",\n    \"mercury\",\n    \"nebula\",\n    \"stars at night\",\n    \"earth from space\",\n  ],\n  \"animals\": [\n    \"red panda\",\n    \"tiger\",\n    \"jellyfish\",\n    \"bird\",\n    \"moth\",\n    \"butterfly\",\n    \"snake\",\n    \"antelope\",\n    \"crow\",\n    \"fossa\",\n    \"lion\",\n    \"crane\",\n    \"fish\",\n    \"deer\",\n    \"firelies\",\n    \"cat\",\n    \"magpie\",\n    \"lemur\",\n    \"fox\",\n    \"shell\",\n    \"feather\",\n    \"wings\",\n    \"flock\",\n  ],\n  \"people\": [\n    \"child\",\n    \"human\",\n    \"traveller\",\n    \"man\",\n    \"woman\",\n  ],\n  \"human places\": [\n    \"village\",\n    \"town\",\n    \"city\",\n    \"gothic\",\n    \"building\",\n    \"observatory\",\n    \"tower\",\n    \"roof\",\n    \"archway\",\n  ],\n  \"earth\": [\n    \"plains\",\n    \"mountains\",\n    \"lake\",\n    \"river\",\n    \"stream\",\n    \"desert\",\n    \"water\",\n    \"ocean\",\n    \"cliff\",\n    \"forest\",\n    \"coast\",\n    \"beach\",\n    \"ice\",\n    \"rocks\",\n    \"opal\",\n    \"jasper\",\n    \"agate\",\n    \"labradorite\",\n    \"fossil\",\n    \"ammonite\",\n    \"moonstone\",\n    \"crystal\",\n  ],\n  \"sky\": [\n    \"sky\",\n    \"rainbow\",\n    \"cloud\",\n    \"cumulus clouds\",\n    \"mist\",\n    \"fog\",\n    \"snow\",\n    \"shade\",\n    \"rain\",\n    \"storm\",\n    \"smoke\",\n    \"fire\",\n    \"night\",\n    \"sunset\",\n    \"sunrise\",\n  ],\n  \"growing things\": [\n    \"tree roots\",\n    \"leaves\",\n    \"vines\",\n    \"boabab tree\",\n    \"japanese maple tree\",\n    \"moss\",\n    \"branches\",\n    \"ivy\",\n    \"blossom tree\",\n    \"mushrooms\",\n    \"houseplant\",\n    \"lily pads\",\n    \"flowers\",\n  ],\n  \"objects\": [\n    \"cloak\",\n    \"books\",\n    \"fractal\",\n    \"gateway\",\n    \"portal\",\n    \"window\",\n    \"mask\",\n    \"music\",\n    \"clock\",\n    \"door\",\n    \"boat\",\n    \"sphere\",\n    \"light\",\n    \"lamp\",\n    \"light ray\",\n    \"hat\",\n    \"path\",\n  ],\n  \"adjectives\": [\n    \"distant\",\n    \"huge\",\n    \"fluorescent\",\n    \"rocky\",\n    \"bioluminescent\",\n    \"mechanical\",\n    \"magic\",\n    \"cosmic\",\n    \"dark\",\n    \"red\",\n    \"orange\",\n    \"yellow\",\n    \"green\",\n    \"blue\",\n    \"turquoise\",\n    \"indigo\",\n    \"purple\",\n    \"pink\",\n    \"brown\",\n    \"gray\",\n  ],\n  \"verbs\": [\n    \"watching\",\n    \"running\",\n    \"dancing\",\n    \"embracing\",\n    \"shining\",\n    \"sleeping\",\n    \"growing\",\n    \"discovering\",\n    \"resting\",\n    \"playing\",\n    \"hugging\",\n    \"staring\",\n    \"glowing\",\n    \"flying\",\n  ],\n};\n","import React, { Component } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport ChosenWords from './components/ChosenWords';\nimport RemoveWordArea from './components/RemoveWordArea';\nimport Tooltip from './components/Tooltip';\nimport ChangeNumWordsButton from './components/ChangeNumWordsButton';\nimport ChooseRandomWordsButton from './components/ChooseRandomWordsButton';\nimport Category from './components/Category';\nimport { wordsData } from './data/wordsData.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { selectedWords: [], isDragging: false, numWords: 3, categoriesCollapsed: false, categoriesExpanded: false };\n  }\n\n  changeNumWords = (diff) => {\n    var totalNumWords = 0;\n    Object.keys(wordsData).forEach(category => totalNumWords = totalNumWords + wordsData[category].length);\n\n    if ((this.state.numWords === 1 && diff < 0)\n        || (this.state.numWords === totalNumWords && diff > 0)\n        || (this.state.numWords === 10 && diff > 0)) {\n      return;\n    }\n\n    const newNumWords = this.state.numWords + diff;\n    this.setState({ numWords: newNumWords });\n  }\n\n  getRandomWord = () => {\n    const categories = Object.keys(wordsData);\n    const randomCategory = wordsData[categories[Math.floor(Math.random() * categories.length)]]\n    return randomCategory[Math.floor(Math.random() * randomCategory.length)];\n  }\n\n  chooseRandomWords = () => {\n    var chosenWords = [];\n\n    while (chosenWords.length < this.state.numWords) {\n      const randomWord = this.getRandomWord();\n      if (!chosenWords.includes(randomWord)) {\n        chosenWords.push(randomWord);\n      }\n    }\n\n    this.setState({ selectedWords: chosenWords });\n  }\n\n  clearWords = () => {\n    this.setState({ selectedWords: [] });\n  }\n\n  collapseCategories = () => {\n    this.setState({ categoriesCollapsed: true }, () => { this.setState({ categoriesCollapsed: false })});\n  }\n\n  expandCategories = () => {\n    this.setState({ categoriesExpanded: true }, () => { this.setState({ categoriesExpanded: false })});\n  }\n\n  onClickWord = (word) => {\n    if (this.state.selectedWords.includes(word)) {\n      // remove word\n      const newSelectedWords = this.state.selectedWords.filter((selectedWord) => selectedWord !== word);\n      this.setState({ selectedWords: newSelectedWords });\n    } else {\n      // add word\n      var newSelectedWords = Array.from(this.state.selectedWords);\n      newSelectedWords.push(word);\n      this.setState({ selectedWords: newSelectedWords });\n    }\n  }\n\n  onDragStart = () => {\n    this.setState({ isDragging: true });\n  }\n\n  onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === 'delete-area') {\n      // delete word\n      const newSelectedWords = Array.from(this.state.selectedWords);\n      newSelectedWords.splice(source.index, 1);\n      this.setState({ selectedWords: newSelectedWords, isDragging: false });\n      return;\n    }\n\n    if (destination.droppablId === source.droppablId && destination.index === source.index) {\n      // no change\n      this.setState({ isDragging: false });\n      return;\n    }\n\n    const newSelectedWords = Array.from(this.state.selectedWords);\n    // remove 1 at source index\n    newSelectedWords.splice(source.index, 1);\n    // add dragged word at destination index\n    newSelectedWords.splice(destination.index, 0, draggableId);\n\n    this.setState({ selectedWords: newSelectedWords, isDragging: false });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"h-full bg-indigo-100 p-8\">\n          <h1 className=\"text-indigo-900 title-font text-2xl\">Art Idea Generator</h1>\n        </div>\n        <section className=\"text-gray-600 body-font\">\n          <div className=\"container px-10 py-24 mx-auto\">\n            <div className=\"text-center mb-5\">\n              <DragDropContext onDragStart={this.onDragStart} onDragEnd={this.onDragEnd} >\n                <ChosenWords selectedWords={this.state.selectedWords} />\n                <RemoveWordArea isDragging={this.state.isDragging}/>\n              </DragDropContext>\n              <div className=\"flex flex-row flex-auto space-around align-center justify-center\">\n                <div className=\"w-7\">\n                </div>\n                <div>\n                  <div className=\"flex flex-auto flex-row space-around\">\n                    <ChangeNumWordsButton diff={-1} changeNumWords={this.changeNumWords}/>\n                    <ChooseRandomWordsButton numWords={this.state.numWords} onClick={this.chooseRandomWords}/>\n                    <ChangeNumWordsButton diff={1} changeNumWords={this.changeNumWords}/>\n                  </div>\n                </div>\n                <div>\n                  <Tooltip direction=\"right\" content=\"Choose the number of words you'd like, and press the button to randomly choose. You can also manually choose words, rearrange and delete them\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"inline h-7 w-7\" viewBox=\"0 0 20 20\" fill=\"rgb(143, 161, 234)\">\n                      <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </Tooltip>\n                </div>\n              </div>\n              <div className=\"text-base leading-relaxed text-gray-400 pt-4\" onClick={this.clearWords}>\n                <button className=\"select-none focus:outline-none\">Clear selected</button>\n              </div>\n            </div>\n            <div className=\"text-base leading-relaxed text-gray-400\">\n              <button className=\"select-none focus:outline-none px-2\" onClick={this.collapseCategories}>Collapse all</button>\n              <button className=\"select-none focus:outline-none px-2\" onClick={this.expandCategories}>Expand all</button>\n            </div>\n            <div className=\"container flex flex-wrap m-4 mx-auto text-center items-left justify-left\">\n              { \n                Object.keys(wordsData).map((category) => {\n                  return <Category key={`category-${category}`} category={category} words={wordsData[category]}\n                                   onClickWord={this.onClickWord} selectedWords={this.state.selectedWords}\n                                   collapse={this.state.categoriesCollapsed} expand={this.state.categoriesExpanded} />\n                }) \n              }\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}