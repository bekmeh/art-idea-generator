{"version":3,"sources":["components/ChosenWord.js","components/ChosenWords.js","components/RemoveWordArea.js","components/ChangeNumWordsButton.js","components/ChooseRandomWordsButton.js","components/IdeaWord.js","components/Category.js","data/wordsData.js","App.js","reportWebVitals.js","index.js"],"names":["ChosenWord","this","props","word","index","draggableId","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","id","className","draggingOver","isDragging","Component","ChosenWords","selectedWords","droppableId","direction","droppableProps","length","map","selectedWord","placeholder","RemoveWordArea","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ChangeNumWordsButton","diff","label","onClick","changeNumWords","ChooseRandomWordsButton","numWords","IdeaWord","selected","Category","handleArrowClick","isOpen","state","setState","prevProps","collapse","expand","words","some","includes","category","arrow","arias-hidden","data-reactid","height","width","points","hasWords","onClickWord","wordsData","App","totalNumWords","Object","keys","forEach","newNumWords","getRandomWord","categories","randomCategory","Math","floor","random","chooseRandomWords","chosenWords","randomWord","push","clearWords","collapseCategories","categoriesCollapsed","expandCategories","categoriesExpanded","newSelectedWords","filter","Array","from","onDragStart","onDragEnd","result","destination","source","splice","droppablId","fillRule","clipRule","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAoCeA,E,4JA9Bb,WACE,MAAwBC,KAAKC,MAArBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OACE,cAAC,IAAD,CAAWC,YAAaF,EAAMC,MAAOA,EAArC,SACG,SAACE,EAAUC,GAAX,OACC,2DAASD,EAASE,gBACTF,EAASG,iBADlB,IAEKC,IAAKJ,EAASK,SAFnB,SAIE,sBAAMC,GAAIT,EACJU,UAAS,sRAKgC,gBAA1BN,EAASO,aACR,0BACAP,EAASQ,WACP,gCACA,gCAVxB,SAWIZ,c,GAvBSa,aC6BVC,E,4JA3Bb,WACE,IAAQC,EAAkBjB,KAAKC,MAAvBgB,cAER,OACE,cAAC,IAAD,CAAWC,YAAY,yBAAyBC,UAAU,aAA1D,SACI,SAACd,GAAD,OACA,8CAAKI,IAAKJ,EAASK,UACXL,EAASe,gBADjB,IAEIR,UAAU,mJAFd,UAK6B,IAAzBK,EAAcI,OACV,mBAAGT,UAAU,0DAAb,sCACA,KAGNK,EAAcK,KAAI,SAACC,EAAcpB,GAC/B,OAAO,cAAC,EAAD,CAA2CA,MAAOA,EAAOD,KAAMqB,GAA/D,iBAA2BA,OAGrClB,EAASmB,uB,GAtBMT,aCwBXU,E,4JAvBb,WAAU,IAAD,OACP,OACE,cAAC,IAAD,CAAWP,YAAY,cAAcC,UAAU,aAA/C,SACI,SAACd,GAAD,OACA,6CAAKI,IAAKJ,EAASK,UACVL,EAASe,gBADlB,IAEKR,UAAS,iFAFd,SAIE,mBAAGA,UAAU,4BAAb,SACI,EAAKX,MAAMa,WACT,qBAAKY,MAAM,6BAA6Bd,UAAU,eAAee,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAxG,SACE,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,mIAEvE,iB,GAfWlB,aC0BdmB,E,4JAxBb,WAAU,IAAD,OACCC,EAASnC,KAAKC,MAAdkC,KAEJC,EAAQ,GAQZ,OANa,IAATD,EACFC,EAAQ,KACW,IAAVD,IACTC,EAAQ,KAIR,wBAAQxB,UAAU,oKAK0CyB,QAAS,kBAAM,EAAKpC,MAAMqC,eAAeH,IALrG,SAMKC,Q,GApBwBrB,aCkBpBwB,E,4JAhBb,WACE,IAAQC,EAAaxC,KAAKC,MAAlBuC,SAER,OACE,yBAAQ5B,UAAU,gKAK0CyB,QAASrC,KAAKC,MAAMoC,QALhF,qBAMU,mBAAGzB,UAAU,oCAAb,SAAmD4B,IAN7D,cAMwFA,EAAW,EAAI,IAAM,U,GAZ7EzB,aCoBvB0B,E,4JAnBb,WAAU,IAAD,OACP,EAA2BzC,KAAKC,MAAxBC,EAAR,EAAQA,KAAMwC,EAAd,EAAcA,SAEd,OACE,sBAAM9B,UAAS,wOAKK8B,EACE,gEACA,0EACdL,QAAS,kBAAM,EAAKpC,MAAMoC,QAAQnC,IAR1C,SASIA,Q,GAfaa,aCqER4B,E,kDAlEb,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IAoBR2C,iBAAmB,WACjB,IAAMC,EAAS,EAAKC,MAAMD,OAC1B,EAAKE,SAAS,CAAEF,QAASA,KArBzB,EAAKC,MAAQ,CAAED,QAAQ,GAFN,E,sDAKnB,SAAmBG,GAAY,IAAD,QACD,IAAvBA,EAAUC,WAA8C,IAAxBjD,KAAKC,MAAMgD,UAC7CjD,KAAK+C,SAAS,CAAEF,QAAQ,KAGD,IAArBG,EAAUE,SAA0C,IAAtBlD,KAAKC,MAAMiD,QAC3ClD,KAAK+C,SAAS,CAAEF,QAAQ,IAGtBG,EAAU/B,gBAAkBjB,KAAKC,MAAMgB,eACrCjB,KAAKC,MAAMkD,MAAMC,MAAK,SAAAlD,GAAI,OAAI,EAAKD,MAAMgB,cAAcoC,SAASnD,OAClEF,KAAK+C,SAAS,CAAEF,QAAQ,M,oBAU9B,WAAU,IAAD,OACP,EAA4B7C,KAAKC,MAAzBqD,EAAR,EAAQA,SAAUH,EAAlB,EAAkBA,MACZI,EAAQvD,KAAK8C,MAAMD,OACpB,qBAAKW,eAAa,OAAOC,eAAa,MAAM9B,KAAK,OAAO+B,OAAO,KAAK7B,OAAO,mBAAmBC,cAAc,QACvGC,eAAe,QAAQC,YAAY,IAAIJ,QAAQ,YAAY+B,MAAM,KAAKjC,MAAM,6BADjF,SAEA,0BAAUkC,OAAO,sBAEjB,qBAAKJ,eAAa,OAAOC,eAAa,MAAM9B,KAAK,OAAO+B,OAAO,KAAK7B,OAAO,mBAAmBC,cAAc,QACvGC,eAAe,QAAQC,YAAY,IAAIJ,QAAQ,YAAY+B,MAAM,KAAKjC,MAAM,6BADjF,SAEC,0BAAUkC,OAAO,qBAGjBC,EAAWV,EAAMC,MAAK,SAAAlD,GAAI,OAAI,EAAKD,MAAMgB,cAAcoC,SAASnD,MAEtE,OACE,sBAAKU,UAAU,+BAAf,UACE,sBAAKA,UAAS,yGAAoGiD,EAAW,gCAAkC,IAA/J,UACE,oBAAIjD,UAAU,oGAAd,SACI0C,IAEJ,qBAAK1C,UAAU,4GACVyB,QAASrC,KAAK4C,iBADnB,SAEIW,OAGJvD,KAAK8C,MAAMD,OACP,qBAAKjC,UAAU,sFAAf,SAEIuC,EAAM7B,KAAI,SAACpB,GACT,OAAO,cAAC,EAAD,CAA+BA,KAAMA,EAAMmC,QAAS,EAAKpC,MAAM6D,YAAapB,SAAU,EAAKzC,MAAMgB,cAAcoC,SAASnD,IAAxH,eAAuBA,SAIpC,Y,GA7DSa,aCHVgD,EAAY,CACvB,MAAS,CACP,UACA,OACA,QACA,QACA,UACA,YACA,SACA,SACA,MACA,SACA,UACA,SACA,iBACA,oBAEF,QAAW,CACT,YACA,QACA,YACA,OACA,OACA,YACA,QACA,WACA,OACA,QACA,OACA,QACA,OACA,OACA,WACA,MACA,SACA,QACA,MACA,QACA,UACA,QACA,SAEF,OAAU,CACR,QACA,QACA,YACA,MACA,SAEF,eAAgB,CACd,UACA,OACA,OACA,SACA,WACA,cACA,QACA,OACA,WAEF,MAAS,CACP,SACA,YACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,QACA,OACA,SACA,QACA,cACA,SACA,WACA,YACA,WAEF,IAAO,CACL,MACA,UACA,QACA,iBACA,OACA,MACA,OACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,WAEF,iBAAkB,CAChB,aACA,SACA,QACA,cACA,sBACA,OACA,WACA,MACA,eACA,YACA,aACA,YACA,WAEF,QAAW,CACT,QACA,QACA,UACA,UACA,SACA,SACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,OACA,YACA,MACA,QAEF,WAAc,CACZ,UACA,OACA,cACA,QACA,iBACA,aACA,QACA,SACA,OACA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","file":"static/js/main.8f2d06ac.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nclass ChosenWord extends Component {\n\n  render() {\n    const { word, index } = this.props;\n\n    return (\n      <Draggable draggableId={word} index={index}>\n        {(provided, snapshot) => (\n          <div {...provided.draggableProps}\n               {...provided.dragHandleProps}\n               ref={provided.innerRef}\n          >\n            <span id={word}\n                  className={`inline-block\n                              cursor-move\n                              select-none\n                              py-1 px-2 mx-2 rounded\n                              text-2xl font-medium tracking-widest transition-none\n                              ${ snapshot.draggingOver === 'delete-area'\n                                ? 'bg-red-300 text-red-800'\n                                : snapshot.isDragging\n                                  ? 'bg-indigo-300 text-indigo-800'\n                                  : 'bg-indigo-50 text-indigo-500' }`}>\n              { word }\n            </span>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport default ChosenWord;\n","import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport ChosenWord from './ChosenWord';\n\nclass ChosenWords extends Component {\n  \n  render() {\n    const { selectedWords } = this.props;\n\n    return (\n      <Droppable droppableId=\"chosen-words-droppable\" direction=\"horizontal\">\n        { (provided) => (\n          <div ref={provided.innerRef}\n              {...provided.droppableProps}\n              className=\"flex flex-auto flex-row flex-wrap gap-y-4 justify-center sm:text-3xl text-2xl font-medium text-center title-font text-gray-900 mb-4 mt-16 h-full\"\n          >\n            {\n              selectedWords.length === 0\n                ? <p className=\"text-base title-font leading-relaxed text-gray-400 pt-4\">Please choose some words</p>\n                : null\n          }\n          {\n            selectedWords.map((selectedWord, index) => {\n              return <ChosenWord key={`chosen=${selectedWord}`} index={index} word={selectedWord}/>\n            })\n          }\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  )}\n}\n\nexport default ChosenWords;\n","import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nclass RemoveWordArea extends Component {\n  \n  render() {\n    return (\n      <Droppable droppableId=\"delete-area\" direction=\"horizontal\">\n        { (provided) => (\n          <div ref={provided.innerRef}\n               {...provided.droppableProps}\n               className={`flex flex-row justify-center rounded-full mx-auto h-10 w-10 my-4 text-gray-400`}\n          >\n            <p className=\"text-base leading-relaxed\">\n              { this.props.isDragging\n                ? <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mt-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                  </svg> \n                : null \n              }\n            </p>\n          </div>\n        )}\n      </Droppable>\n    )\n  }\n}\n\nexport default RemoveWordArea;\n","\nimport React, { Component } from 'react';\n\nclass ChangeNumWordsButton extends Component {\n\n  render() {\n    const { diff } = this.props;\n\n    var label = \"\";\n\n    if (diff === 1) {\n      label = \"+\";\n    } else if (diff === -1) {\n      label = \"-\";\n    }\n\n    return (\n      <button className=\"flex text-2xl mx-1\n                         text-indigo-800 bg-indigo-200\n                         border-0 py-2 px-4\n                         focus:outline-none hover:bg-indigo-300\n                         rounded text-s\n                         inline-flex items-center justify-center\" onClick={() => this.props.changeNumWords(diff)}>\n         { label }\n      </button>\n    );\n  }\n}\n\nexport default ChangeNumWordsButton;\n","\nimport React, { Component } from 'react';\n\nclass ChooseRandomWordsButton extends Component {\n\n  render() {\n    const { numWords } = this.props;\n\n    return (\n      <button className=\"flex flex-auto mx-1\n                         text-white bg-indigo-400\n                         border-0 py-2 px-8\n                         focus:outline-none hover:bg-indigo-500\n                         rounded text-m\n                         inline-flex items-center justify-center\" onClick={this.props.onClick}>\n        Choose  <p className=\"text-xl pl-4 pr-3 text-indigo-100\">{ numWords }</p>random word{ numWords > 1 ? \"s\" : \"\" }\n      </button>\n    );\n  }\n}\n\nexport default ChooseRandomWordsButton;\n","import React, { Component } from 'react';\n\nclass IdeaWord extends Component {\n\n  render() {\n    const { word, selected } = this.props;\n\n    return (\n      <span className={`inline-block\n                        py-1 px-2 m-1 rounded\n                        cursor-pointer\n                        select-none\n                        text-m font-medium tracking-widest\n                        ${selected\n                          ? \"bg-indigo-200 text-indigo-800 hover:bg-indigo-300 hover:black\"\n                          : \"bg-indigo-50 text-indigo-500 hover:bg-indigo-200 hover:text-indigo-800\"}`}\n              onClick={() => this.props.onClick(word)}>\n        { word }\n      </span> \n    );\n  }\n}\n\nexport default IdeaWord;\n","import React, { Component } from 'react';\nimport IdeaWord from './IdeaWord';\n\nclass Category extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.collapse === false && this.props.collapse === true) {\n      this.setState({ isOpen: false });\n    }\n\n    if (prevProps.expand === false && this.props.expand === true) {\n      this.setState({ isOpen: true });\n    }\n\n    if (prevProps.selectedWords !== this.props.selectedWords) {\n      if (this.props.words.some(word => this.props.selectedWords.includes(word))) {\n        this.setState({ isOpen: true });\n      }\n    }\n  }\n\n  handleArrowClick = () => {\n    const isOpen = this.state.isOpen;\n    this.setState({ isOpen: !isOpen });\n  }\n  \n  render() {\n    const { category, words } = this.props;\n    const arrow = this.state.isOpen \n      ? (<svg arias-hidden=\"true\" data-reactid=\"281\" fill=\"none\" height=\"24\" stroke=\"rgb(79, 70, 229)\" strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n         <polyline points=\"18 15 12 9 6 15\"></polyline>\n        </svg>)\n      : (<svg arias-hidden=\"true\" data-reactid=\"266\" fill=\"none\" height=\"24\" stroke=\"rgb(79, 70, 229)\" strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <polyline points=\"6 9 12 15 18 9\"></polyline>\n        </svg>);\n\n    const hasWords = words.some(word => this.props.selectedWords.includes(word));\n\n    return (\n      <div className=\"p-2 lg:w-1/4 sm:w-1/2 w-full\">\n        <div className={`border border-indigo-50 rounded-xl p-2 mb-2 flex flex-auto flex-row justify-between rounded-md ${hasWords ? \"bg-indigo-50 text-indigo-600 \" : \"\"}`}>\n          <h2 className=\"font-medium title-font select-none tracking-widest m-2 text-sm text-center sm:text-left uppercase\">\n            { category }\n          </h2>\n          <div className=\"rounded-full w-7 h-7 m-2 my-auto float-right flex items-center justify-center bg-indigo-50 cursor-pointer\"\n               onClick={this.handleArrowClick}>\n            { arrow }\n          </div>\n        </div>\n        { this.state.isOpen\n            ? <div className=\"flex flex-auto flex-wrap sm:items-start sm:text-left text-center items-center -mb-1\">\n                {\n                  words.map((word) => {\n                    return <IdeaWord key={`word-${word}`} word={word} onClick={this.props.onClickWord} selected={this.props.selectedWords.includes(word)}/>\n                  })\n                }\n              </div>\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default Category;\n","export const wordsData = {\n  \"space\": [\n    \"jupiter\",\n    \"moon\",\n    \"space\",\n    \"comet\",\n    \"meteors\",\n    \"supernova\",\n    \"galaxy\",\n    \"planet\",\n    \"sun\",\n    \"saturn\",\n    \"mercury\",\n    \"nebula\",\n    \"stars at night\",\n    \"earth from space\",\n  ],\n  \"animals\": [\n    \"red panda\",\n    \"tiger\",\n    \"jellyfish\",\n    \"bird\",\n    \"moth\",\n    \"butterfly\",\n    \"snake\",\n    \"antelope\",\n    \"crow\",\n    \"fossa\",\n    \"lion\",\n    \"crane\",\n    \"fish\",\n    \"deer\",\n    \"firelies\",\n    \"cat\",\n    \"magpie\",\n    \"lemur\",\n    \"fox\",\n    \"shell\",\n    \"feather\",\n    \"wings\",\n    \"flock\",\n  ],\n  \"people\": [\n    \"child\",\n    \"human\",\n    \"traveller\",\n    \"man\",\n    \"woman\",\n  ],\n  \"human places\": [\n    \"village\",\n    \"town\",\n    \"city\",\n    \"gothic\",\n    \"building\",\n    \"observatory\",\n    \"tower\",\n    \"roof\",\n    \"archway\",\n  ],\n  \"earth\": [\n    \"plains\",\n    \"mountains\",\n    \"lake\",\n    \"river\",\n    \"stream\",\n    \"desert\",\n    \"water\",\n    \"ocean\",\n    \"cliff\",\n    \"forest\",\n    \"coast\",\n    \"beach\",\n    \"ice\",\n    \"rocks\",\n    \"opal\",\n    \"jasper\",\n    \"agate\",\n    \"labradorite\",\n    \"fossil\",\n    \"ammonite\",\n    \"moonstone\",\n    \"crystal\",\n  ],\n  \"sky\": [\n    \"sky\",\n    \"rainbow\",\n    \"cloud\",\n    \"cumulus clouds\",\n    \"mist\",\n    \"fog\",\n    \"snow\",\n    \"shade\",\n    \"rain\",\n    \"storm\",\n    \"smoke\",\n    \"fire\",\n    \"night\",\n    \"sunset\",\n    \"sunrise\",\n  ],\n  \"growing things\": [\n    \"tree roots\",\n    \"leaves\",\n    \"vines\",\n    \"boabab tree\",\n    \"japanese maple tree\",\n    \"moss\",\n    \"branches\",\n    \"ivy\",\n    \"blossom tree\",\n    \"mushrooms\",\n    \"houseplant\",\n    \"lily pads\",\n    \"flowers\",\n  ],\n  \"objects\": [\n    \"cloak\",\n    \"books\",\n    \"fractal\",\n    \"gateway\",\n    \"portal\",\n    \"window\",\n    \"mask\",\n    \"music\",\n    \"clock\",\n    \"door\",\n    \"boat\",\n    \"sphere\",\n    \"light\",\n    \"lamp\",\n    \"light ray\",\n    \"hat\",\n    \"path\",\n  ],\n  \"adjectives\": [\n    \"distant\",\n    \"huge\",\n    \"fluorescent\",\n    \"rocky\",\n    \"bioluminescent\",\n    \"mechanical\",\n    \"magic\",\n    \"cosmic\",\n    \"dark\",\n    \"red\",\n    \"orange\",\n    \"yellow\",\n    \"green\",\n    \"blue\",\n    \"turquoise\",\n    \"indigo\",\n    \"purple\",\n    \"pink\",\n    \"brown\",\n    \"gray\",\n  ],\n  \"verbs\": [\n    \"watching\",\n    \"running\",\n    \"dancing\",\n    \"embracing\",\n    \"shining\",\n    \"sleeping\",\n    \"growing\",\n    \"discovering\",\n    \"resting\",\n    \"playing\",\n    \"hugging\",\n    \"staring\",\n    \"glowing\",\n    \"flying\",\n  ],\n};\n","import React, { Component } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport ChosenWords from './components/ChosenWords';\nimport RemoveWordArea from './components/RemoveWordArea';\nimport ChangeNumWordsButton from './components/ChangeNumWordsButton';\nimport ChooseRandomWordsButton from './components/ChooseRandomWordsButton';\nimport Category from './components/Category';\nimport { wordsData } from './data/wordsData.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { selectedWords: [], isDragging: false, numWords: 3, categoriesCollapsed: false, categoriesExpanded: false };\n  }\n\n  changeNumWords = (diff) => {\n    var totalNumWords = 0;\n    Object.keys(wordsData).forEach(category => totalNumWords = totalNumWords + wordsData[category].length);\n\n    if ((this.state.numWords === 1 && diff < 0)\n        || (this.state.numWords === totalNumWords && diff > 0)\n        || (this.state.numWords === 10 && diff > 0)) {\n      return;\n    }\n\n    const newNumWords = this.state.numWords + diff;\n    this.setState({ numWords: newNumWords });\n  }\n\n  getRandomWord = () => {\n    const categories = Object.keys(wordsData);\n    const randomCategory = wordsData[categories[Math.floor(Math.random() * categories.length)]]\n    return randomCategory[Math.floor(Math.random() * randomCategory.length)];\n  }\n\n  chooseRandomWords = () => {\n    var chosenWords = [];\n\n    while (chosenWords.length < this.state.numWords) {\n      const randomWord = this.getRandomWord();\n      if (!chosenWords.includes(randomWord)) {\n        chosenWords.push(randomWord);\n      }\n    }\n\n    this.setState({ selectedWords: chosenWords });\n  }\n\n  clearWords = () => {\n    this.setState({ selectedWords: [] });\n  }\n\n  collapseCategories = () => {\n    this.setState({ categoriesCollapsed: true }, () => { this.setState({ categoriesCollapsed: false })});\n  }\n\n  expandCategories = () => {\n    this.setState({ categoriesExpanded: true }, () => { this.setState({ categoriesExpanded: false })});\n  }\n\n  onClickWord = (word) => {\n    if (this.state.selectedWords.includes(word)) {\n      // remove word\n      const newSelectedWords = this.state.selectedWords.filter((selectedWord) => selectedWord !== word);\n      this.setState({ selectedWords: newSelectedWords });\n    } else {\n      // add word\n      var newSelectedWords = Array.from(this.state.selectedWords);\n      newSelectedWords.push(word);\n      this.setState({ selectedWords: newSelectedWords });\n    }\n  }\n\n  onDragStart = () => {\n    this.setState({ isDragging: true });\n  }\n\n  onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === 'delete-area') {\n      // delete word\n      const newSelectedWords = Array.from(this.state.selectedWords);\n      newSelectedWords.splice(source.index, 1);\n      this.setState({ selectedWords: newSelectedWords, isDragging: false });\n      return;\n    }\n\n    if (destination.droppablId === source.droppablId && destination.index === source.index) {\n      // no change\n      this.setState({ isDragging: false });\n      return;\n    }\n\n    const newSelectedWords = Array.from(this.state.selectedWords);\n    // remove 1 at source index\n    newSelectedWords.splice(source.index, 1);\n    // add dragged word at destination index\n    newSelectedWords.splice(destination.index, 0, draggableId);\n\n    this.setState({ selectedWords: newSelectedWords, isDragging: false });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"h-full bg-indigo-100 p-8\">\n          <h1 className=\"text-indigo-900 title-font text-2xl\">Art Idea Generator</h1>\n        </div>\n        <section className=\"text-gray-600 body-font\">\n          <div className=\"container md:px-32 sm:px-10 px-2 pb-24 mx-auto\">\n            <div className=\"text-center mb-5\">\n              <DragDropContext onDragStart={this.onDragStart} onDragEnd={this.onDragEnd} >\n                <ChosenWords selectedWords={this.state.selectedWords} />\n                <RemoveWordArea isDragging={this.state.isDragging}/>\n              </DragDropContext>\n              <div className=\"flex flex-row flex-auto space-around align-center justify-center\">\n                <div>\n                  <div className=\"flex flex-auto flex-row content-center\">\n                    <ChangeNumWordsButton diff={-1} changeNumWords={this.changeNumWords}/>\n                    <ChooseRandomWordsButton numWords={this.state.numWords} onClick={this.chooseRandomWords}/>\n                    <ChangeNumWordsButton diff={1} changeNumWords={this.changeNumWords}/>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-center content-center text-base text-center leading-relaxed text-gray-400 pt-4\">\n                <button className=\"flex flex-row border border-indigo-100 rounded-xl p-1 select-none focus:outline-none hover:bg-indigo-50\" onClick={this.clearWords}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 pl-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                  </svg>\n                  <p className=\"px-2\">Clear</p>\n                </button>\n              </div>\n              <div className=\"border-double border-4 border-indigo-200 rounded-md p-3 mt-6 xl:mx-96 lg:mx-64 sm:mx-24 mx-12\">\n                <p className=\"\">Choose the number of words you'd like, then press the button to randomly generate. You can also manually select words below, and drag to rearrange/delete them.</p>\n              </div>\n            </div>\n            <div className=\"flex flex-row justify-center content-center text-base leading-relaxed text-gray-400\">\n              <button className=\"flex flex-row border border-indigo-100 rounded-xl p-1 select-none focus:outline-none hover:bg-indigo-50 px-2 mx-2\" onClick={this.collapseCategories}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mt-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M4.293 15.707a1 1 0 010-1.414l5-5a1 1 0 011.414 0l5 5a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414 0zm0-6a1 1 0 010-1.414l5-5a1 1 0 011.414 0l5 5a1 1 0 01-1.414 1.414L10 5.414 5.707 9.707a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n                <p className=\"px-2\">Collapse all</p>\n              </button>\n              <button className=\"flex flex-row border border-indigo-100 rounded-xl p-1 select-none focus:outline-none hover:bg-indigo-50 px-2 mx-2\" onClick={this.expandCategories}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mt-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M15.707 4.293a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 011.414 0zm0 6a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 111.414-1.414L10 14.586l4.293-4.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n                <p className=\"px-2\">Expand all</p>\n              </button>\n            </div>\n            <div className=\"container flex flex-wrap m-4 mx-auto text-center items-left justify-left\">\n              { \n                Object.keys(wordsData).map((category) => {\n                  return <Category key={`category-${category}`} category={category} words={wordsData[category]}\n                                   onClickWord={this.onClickWord} selectedWords={this.state.selectedWords}\n                                   collapse={this.state.categoriesCollapsed} expand={this.state.categoriesExpanded} />\n                }) \n              }\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}